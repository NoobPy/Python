import pandas as pd
from selenium import webdriver
from bs4 import BeautifulSoup
from selenium.webdriver.chrome.service import Service as ChromeService
import smtplib
from email.mime.multipart import MIMEMultipart
from email.mime.text import MIMEText
from tabulate import tabulate

chromedriver_path = 'C:/Users/tiwar/OneDrive/Desktop/Python/chromedriver.exe'


options = webdriver.ChromeOptions()

options.add_argument('--headless') #this will allow chrome to run without opening chrome
options.add_argument('--disable-gpu') #no need to engage gpu making code run faster
options.add_argument('--blink-settings=imagesEnabled=false') #no need to load images making code run faster


service_args = ['--executable-path=' + chromedriver_path]
service = ChromeService(service_args=service_args)

data={'Name': ['Cabbage','Cauliflower','Aata BB Royal','Bheendi','Potato','Tomato','Onion','Cluster Beans'],
'Cut_off_Price':[32,20,355,30,34,21,31,65],
'URL':['https://www.bigbasket.com/pd/10000066/fresho-cabbage-1-pc/?nc=as','https://www.bigbasket.com/pd/10000074/fresho-cauliflower-1-pc/?nc=as','https://www.bigbasket.com/pd/40099239/bb-royal-chakki-fresh-wheat-atta-fortified-10-kg/?nc=as','https://www.bigbasket.com/pd/10000142/fresho-ladies-finger-1-kg/?nc=as','https://www.bigbasket.com/pd/10000159/fresho-potato-1-kg/?nc=as','https://www.bigbasket.com/pd/10000203/fresho-tomato-local-1-kg/?nc=as','https://www.bigbasket.com/pd/10000148/fresho-onion-1-kg/?nc=as','https://www.bigbasket.com/pd/10000039/fresho-beans-cluster-1-kg/?nc=as']
}
df1=pd.DataFrame(data)
df2=df1.copy()

for i in range(len(df2)):
   
    with webdriver.Chrome(service=service, options=options) as driver:
        driver.get(df2.iloc[i,2]) #get each URL row by row

    
        driver.implicitly_wait(1) #wait for the page to load

       
        page_source = driver.page_source

        
        soup = BeautifulSoup(page_source, 'html.parser') #convert the webpage to html format

        
        title = soup.title.text #get the title of the webpage
        price=soup.find('td',class_='Description___StyledTd-sc-82a36a-4 fLZywG') #here we find the price. You need to inspect element to get this information
    
        df2.at[i,'Current Price']=price.text #add a col current price and its value is price returnd by td
        df2.at[i,'Title']=title #add a col title and its value is title retured above
    #print(df2)


df2=df2.drop('URL',axis=1) #url is no longer needed
html_table = tabulate(df2, tablefmt='html', headers='keys') #tabulate will convert the dataframe to html and table header will be dataframe keys/col
sender_email = "pneeraj728@gmail.com"
receiver_email = "pneeraj728@gmail.com"
subject = "BB Test"
body = f"<p>Please find below the Current Prices:</p>{html_table}" #attaching coverted table along with body


smtp_server = "smtp.gmail.com"
smtp_port = 587
smtp_username = "pneeraj728@gmail.com"
smtp_password = "Enter your password"
#note smtp_password is not your google password follow below youtube tutorials to generate smtp password
#https://www.youtube.com/watch?v=I9x0w8cjR_o
#https://www.youtube.com/watch?v=qpAI5qZR9ms

message = MIMEMultipart()
message["From"] = sender_email
message["To"] = receiver_email
message["Subject"] = subject
message.attach(MIMEText(body, "html"))


with smtplib.SMTP(smtp_server, smtp_port) as server:
    # Start the TLS encryption
    server.starttls()
    # Login to the Gmail account
    server.login(smtp_username, smtp_password)
    # Send the email
    server.sendmail(sender_email, receiver_email, message.as_string())
    # Logout from the server
    server.quit()

